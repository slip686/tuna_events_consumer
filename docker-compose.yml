version: '3'

services:
  zookeeper:
    image: zookeeper:3.8
    container_name: zookeeper
    hostname: zookeeper

  clickhouse-node1:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "clickhouse-client --query
      'CREATE DATABASE IF NOT EXISTS shard;
      CREATE TABLE IF NOT EXISTS shard.playback_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
          track_id Int64,
          track_year Int16,
          track_name String,
          track_genres Array(String),
          artists_names Array(String),
          album_name String,
          album_id Int64,
          track_duration Int32,
          track_elapsed_duration Int32
      )
        Engine=ReplicatedMergeTree('/clickhouse/tables/shard1/playback_events', 'playback_events_replica_1')
        PARTITION BY toYYYYMMDD(timestamp) ORDER BY id;' &&
      clickhouse-client --query
      'CREATE TABLE IF NOT EXISTS shard.playlist_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
          playlist_id Int64,
          playlist_name String,
          owner_id Int64,
          track_ids Array(Int64)
      )
        Engine=ReplicatedMergeTree('/clickhouse/tables/shard1/playlist_events', 'playlist_events_replica_1')
        PARTITION BY toYYYYMMDD(timestamp) ORDER BY id;' &&
      clickhouse-client --query
      'CREATE TABLE IF NOT EXISTS shard.user_account_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
      )
        Engine=ReplicatedMergeTree('/clickhouse/tables/shard1/user_account_events', 'user_account_events_replica_1')
        PARTITION BY toYYYYMMDD(timestamp) ORDER BY id;' &&
      clickhouse-client --query
      'CREATE TABLE IF NOT EXISTS default.playback_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
          track_id Int64,
          track_year Int16,
          track_name String,
          track_genres Array(String),
          artists_names Array(String),
          album_name String,
          album_id Int64,
          track_duration Int32,
          track_elapsed_duration Int32
      )
        ENGINE = Distributed('company_cluster', '', playback_events, rand());' &&
      clickhouse-client --query
      'CREATE TABLE IF NOT EXISTS default.playlist_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
          playlist_id Int64,
          playlist_name String,
          owner_id Int64,
          track_ids Array(Int64)
      )
        ENGINE = Distributed('company_cluster', '', playlist_events, rand());' &&
      clickhouse-client --query
      'CREATE TABLE IF NOT EXISTS default.user_account_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
      )
        ENGINE = Distributed('company_cluster', '', user_account_events, rand());'"

    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./data/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node2:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "clickhouse-client --query
      'CREATE DATABASE IF NOT EXISTS replica;
      CREATE TABLE IF NOT EXISTS replica.playback_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
          track_id Int64,
          track_year Int16,
          track_name String,
          track_genres Array(String),
          artists_names Array(String),
          album_name String,
          album_id Int64,
          track_duration Int32,
          track_elapsed_duration Int32
      )
        Engine=ReplicatedMergeTree('/clickhouse/tables/shard1/playback_events', 'playback_events_replica_2')
        PARTITION BY toYYYYMMDD(timestamp) ORDER BY id;' &&
      clickhouse-client --query
      'CREATE TABLE IF NOT EXISTS replica.playlist_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
          playlist_id Int64,
          playlist_name String,
          owner_id Int64,
          track_ids Array(Int64)
      )
        Engine=ReplicatedMergeTree('/clickhouse/tables/shard1/playlist_events', 'playlist_events_replica_2')
        PARTITION BY toYYYYMMDD(timestamp) ORDER BY id;' &&
      clickhouse-client --query
      'CREATE TABLE IF NOT EXISTS replica.user_account_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
      )
        Engine=ReplicatedMergeTree('/clickhouse/tables/shard1/user_account_events', 'user_account_events_replica_2')
        PARTITION BY toYYYYMMDD(timestamp) ORDER BY id;'"
    ports:
      - "8124:8123"
      - "9001:9000"
    volumes:
      - ./data/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper
      - clickhouse-node1

  clickhouse-node3:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "clickhouse-client --query
      'CREATE DATABASE IF NOT EXISTS shard;
      CREATE TABLE IF NOT EXISTS shard.playback_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
          track_id Int64,
          track_year Int16,
          track_name String,
          track_genres Array(String),
          artists_names Array(String),
          album_name String,
          album_id Int64,
          track_duration Int32,
          track_elapsed_duration Int32
      )
        Engine=ReplicatedMergeTree('/clickhouse/tables/shard2/playback_events', 'playback_events_replica_1')
        PARTITION BY toYYYYMMDD(timestamp) ORDER BY id;' &&
      clickhouse-client --query
      'CREATE TABLE IF NOT EXISTS shard.playlist_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
          playlist_id Int64,
          playlist_name String,
          owner_id Int64,
          track_ids Array(Int64)
      )
        Engine=ReplicatedMergeTree('/clickhouse/tables/shard2/playlist_events', 'playlist_events_replica_1')
        PARTITION BY toYYYYMMDD(timestamp) ORDER BY id;' &&
      clickhouse-client --query
      'CREATE TABLE IF NOT EXISTS shard.user_account_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
      )
        Engine=ReplicatedMergeTree('/clickhouse/tables/shard2/user_account_events', 'user_account_events_replica_1')
        PARTITION BY toYYYYMMDD(timestamp) ORDER BY id;' &&
      clickhouse-client --query
      'CREATE TABLE IF NOT EXISTS default.playback_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
          track_id Int64,
          track_year Int16,
          track_name String,
          track_genres Array(String),
          artists_names Array(String),
          album_name String,
          album_id Int64,
          track_duration Int32,
          track_elapsed_duration Int32
      )
        ENGINE = Distributed('company_cluster', '', playback_events, rand());' &&
      clickhouse-client --query
      'CREATE TABLE IF NOT EXISTS default.playlist_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
          playlist_id Int64,
          playlist_name String,
          owner_id Int64,
          track_ids Array(Int64)
      )
        ENGINE = Distributed('company_cluster', '', playlist_events, rand());' &&
      clickhouse-client --query
      'CREATE TABLE IF NOT EXISTS default.user_account_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
      )
        ENGINE = Distributed('company_cluster', '', user_account_events, rand());'"
    ports:
      - "8125:8123"
      - "9002:9000"
    volumes:
      - ./data/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node4:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "clickhouse-client --query
      'CREATE DATABASE IF NOT EXISTS replica;
      CREATE TABLE IF NOT EXISTS replica.playback_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
          track_id Int64,
          track_year Int16,
          track_name String,
          track_genres Array(String),
          artists_names Array(String),
          album_name String,
          album_id Int64,
          track_duration Int32,
          track_elapsed_duration Int32
      )
        Engine=ReplicatedMergeTree('/clickhouse/tables/shard2/playback_events', 'playback_events_replica_2')
        PARTITION BY toYYYYMMDD(timestamp) ORDER BY id;' &&
      clickhouse-client --query
      'CREATE TABLE IF NOT EXISTS replica.playlist_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
          playlist_id Int64,
          playlist_name String,
          owner_id Int64,
          track_ids Array(Int64)
      )
        Engine=ReplicatedMergeTree('/clickhouse/tables/shard2/playlist_events', 'playlist_events_replica_2')
        PARTITION BY toYYYYMMDD(timestamp) ORDER BY id;'&&
      CREATE TABLE IF NOT EXISTS replica.user_account_events (
          id Int64,
          user_id Int64,
          timestamp DateTime,
          event_type String,
          user_name String,
          user_gender String,
          user_age Int8,
          user_subscribed Bool,
      )
        Engine=ReplicatedMergeTree('/clickhouse/tables/shard2/user_account_events', 'user_account_events_replica_2')
        PARTITION BY toYYYYMMDD(timestamp) ORDER BY id;'"
    ports:
      - "8126:8123"
      - "9003:9000"
    volumes:
      - ./data/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper
      - clickhouse-node3

  tuna_events_consumer:
    image: ghcr.io/slip686/tuna_events_consumer:latest
    container_name: tuna_events_consumer
    restart: always
    environment:
      - KAFKA_HOST=kafka-0
      - KAFKA_PORT=9092
      - CH_HOST=clickhouse-node1
      - CH_PORT=8123
      - HOST=0.0.0.0
      - PORT=3041
    depends_on:
      - clickhouse-node1
      - clickhouse-node2
      - clickhouse-node3
      - clickhouse-node4
    ports:
      - "3041:3041"
